WITH Ada.Text_I_O; USE Ada.Text_IO;
PACKAGE BODY GenericTopologicalSort IS
   PACKAGE MyInt_IO IS NEW Ada.Text_IO.Integer_IO(Integer); USE MyInt_IO;
   TYPE Node;
   TYPE NodePointer IS ACCESS Node;
   TYPE Node IS TAGGED RECORD
      Suc: integer;
      Next: NodePointer;
   END RECORD;

   TYPE JobElement IS RECORD
      Count:Integer :=0;
      Top: NodePointer := NULL;
   END RECORD;

   SortStructure: ARRAY(NumElements) OF JobElement;
   NumberOfAction: Integer:= NumElements;
   P: NodePointer;




  -- Get the relation J < K
   PROCEDURE GetRelation(J: IN Integer; K IN Integer ) IS

   BEGIN
      SortStructure(K).Count := SortStructure(K).Count + 1;
      P:= NEW Node;
      P.Suc:= K;
      P.Next:= SortStructure(J).Top;
      SortStructure(J).Top:= P;
   END GetRelation;

   PROCEDURE TopologicalSort IS
      F,R : Integer :=0;
   BEGIN
      SortStructure(0).Count: = 0;
      FOR K IN 1..NuberOfAction LOOP
         IF SortStructure(K).Count = 0 THEN
            SortStructure(R).Count := K;
            R:= K;
         END IF;
      END LOOP;

      F:= SortStructure(0).Count: = 0;

      WHILE F /= 0 LOOP
         Put(F,0); Put(" ");
         NumberOfAction = NumberOfAction -1;
         P: = SortStructure(F).Top;
         WHILE P /= NULL LOOP
            SortStructure(P.Suc).Count := SortStructure(P.Suc).Count - 1;
            IF SortStructure(P.Suc).Count = 0 THEN
               SortStructure(R):= P.Suc --Add to Output Queue
               R:=P.Suc;
            END IF;
            P:= P.Next;
         END LOOP;
         F:= SortStructure(F).Count;
      END LOOP;

      IF NumberOfAction /= 0 THEN
         Put_Line(" ");
         Put_Line("No Solution.");
         Put("The remaining")






